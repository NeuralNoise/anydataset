<?php

namespace ByJG\AnyDataset\Repository;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-22 at 11:33:57.
 */
class AnyDatasetTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var AnyDataset
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new AnyDataset;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::XML
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::getDomObject
	 */
	public function testXML()
	{
		$this->object->appendRow();
		$this->object->addField('field', 'value');

		$xmlDom = \ByJG\Util\XmlUtil::CreateXmlDocumentFromStr(
			'<?xml version="1.0" encoding="utf-8"?>'
				. '<anydataset>'
				. '<row>'
				. '<field name="field">value</field>'
				. '</row>'
			. '</anydataset>'
		);
		$xmlDomValidate = \ByJG\Util\XmlUtil::CreateXmlDocumentFromStr($this->object->XML());

		$this->assertEquals($xmlDom, $xmlDomValidate);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::Save
	 * @todo   Implement testSave().
	 */
	public function testSave()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::appendRow
	 * @todo   Implement testAppendRow().
	 */
	public function testAppendRow()
	{
		$qtd = $this->object->getIterator()->count();
		$this->assertEquals(0, $qtd);

		$this->object->appendRow();
		$qtd = $this->object->getIterator()->count();
		$this->assertEquals(1, $qtd);

		$this->object->appendRow();
		$qtd = $this->object->getIterator()->count();
		$this->assertEquals(2, $qtd);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::import
	 * @todo   Implement testImport().
	 */
	public function testImport()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::insertRowBefore
	 * @todo   Implement testInsertRowBefore().
	 */
	public function testInsertRowBefore()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::removeRow
	 * @todo   Implement testRemoveRow().
	 */
	public function testRemoveRow()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::addField
	 * @todo   Implement testAddField().
	 */
	public function testAddField()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::getIterator
	 * @todo   Implement testGetIterator().
	 */
	public function testGetIterator()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::getArray
	 * @todo   Implement testGetArray().
	 */
	public function testGetArray()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers ByJG\AnyDataset\Repository\AnyDataset::Sort
	 * @todo   Implement testSort().
	 */
	public function testSort()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}
